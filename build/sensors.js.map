{"version":3,"sources":["sensors.js"],"names":["Packet","constructor","id","name","size","range","unit","_id","_name","_dataSize","_dataRange","_dataUnit","getId","getName","getDataSize","getDataRange","getDataUnit","parse","bytes","data","forEach","byte","index","array","length","validate","Array","isArray","Data","packet","Error","_packet","_data","_timestamp","Date","now","getData","getPacket","getTimestamp","toString"],"mappings":";;;;;AAAA,IAAIA,SAAS,MAAMA,MAAN,CAAa;AACtBC,gBAAYC,EAAZ,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,IAAnC,EAAyC;AACrC,aAAKC,GAAL,GAAWL,EAAX;AACA,aAAKM,KAAL,GAAaL,IAAb;AACA,aAAKM,SAAL,GAAiBL,IAAjB;AACA,aAAKM,UAAL,GAAkBL,KAAlB;AACA,aAAKM,SAAL,GAAiBL,IAAjB;AACH;AACDM,YAAQ;AACJ,eAAO,KAAKL,GAAZ;AACH;AACDM,cAAU;AACN,eAAO,KAAKL,KAAZ;AACH;AACDM,kBAAc;AACV,eAAO,KAAKL,SAAZ;AACH;AACDM,mBAAe;AACX,eAAO,KAAKL,UAAZ;AACH;AACDM,kBAAc;AACV,eAAO,KAAKL,SAAZ;AACH;AACDM,UAAM,GAAGC,KAAT,EAAgB;AACZ,YAAIC,OAAO,CAAX;AACAD,cAAME,OAAN,CAAc,CAACC,IAAD,EAAOC,KAAP,EAAcC,KAAd,KAAwB;AAClCJ,oBAASE,QAAQE,MAAMC,MAAN,GAAeF,KAAf,GAAuB,CAAxC;AACH,SAFD;AAGA,eAAOH,IAAP;AACH;AACDM,aAASN,IAAT,EAAe;AACX,YAAGO,MAAMC,OAAN,CAAcR,IAAd,CAAH,EAAwB;AAAEA,mBAAO,KAAKF,KAAL,CAAWE,IAAX,CAAP;AAA0B;AACpD,eAAOA,QAAQ,KAAKT,UAAL,CAAgB,CAAhB,CAAR,IAA8BS,QAAQ,KAAKT,UAAL,CAAgB,CAAhB,CAA7C;AACH;AAjCqB,CAA1B;;AAoCA,IAAIkB,OAAO,MAAMA,IAAN,CAAW;AAClB3B,gBAAY4B,MAAZ,EAAoBV,IAApB,EAA0B;AACtB,YAAGO,MAAMC,OAAN,CAAcR,IAAd,CAAH,EAAwB;AAAEA,mBAAOU,OAAOZ,KAAP,CAAaE,IAAb,CAAP;AAA4B;AACtD,YAAG,CAACU,OAAOJ,QAAP,CAAgBN,IAAhB,CAAJ,EAA2B;AAAE,kBAAM,IAAIW,KAAJ,CAAW,uBAAsBX,IAAK,KAAIU,OAAOhB,OAAP,EAAiB,EAA3D,CAAN;AAAsE;AACnG,aAAKkB,OAAL,GAAeF,MAAf;AACA,aAAKG,KAAL,GAAab,IAAb;AACA,aAAKc,UAAL,GAAkBC,KAAKC,GAAL,EAAlB;AACH;AACDC,cAAU;AACN,eAAO,KAAKJ,KAAZ;AACH;AACDK,gBAAY;AACR,eAAO,KAAKN,OAAZ;AACH;AACDO,mBAAe;AACX,eAAO,KAAKL,UAAZ;AACH;AACDM,eAAW;AACP,eAAQ,GAAE,KAAKH,OAAL,EAAe,iBAAgB,KAAKC,SAAL,GAAiBzB,KAAjB,EAAyB,KAAI,KAAKyB,SAAL,GAAiBxB,OAAjB,EAA2B,aAAY,IAAIqB,IAAJ,CAAS,KAAKI,YAAL,EAAT,CAA8B,KAAI,KAAKA,YAAL,EAAoB,GAAnK;AACH;AAnBiB,CAAtB;;kBAsBe,EAACtC,MAAD,EAAS4B,IAAT,E","file":"sensors.js","sourcesContent":["var Packet = class Packet {\n    constructor(id, name, size, range, unit) {\n        this._id = id;\n        this._name = name;\n        this._dataSize = size;\n        this._dataRange = range;\n        this._dataUnit = unit;\n    }\n    getId() {\n        return this._id;\n    }\n    getName() {\n        return this._name;\n    }\n    getDataSize() {\n        return this._dataSize;\n    }\n    getDataRange() {\n        return this._dataRange;\n    }\n    getDataUnit() {\n        return this._dataUnit;\n    }\n    parse(...bytes) {\n        var data = 0;\n        bytes.forEach((byte, index, array) => {\n            data |= (byte << array.length - index - 1);\n        });\n        return data;\n    }\n    validate(data) {\n        if(Array.isArray(data)) { data = this.parse(data); }\n        return data >= this._dataRange[0] && data <= this._dataRange[1];\n    }\n};\n\nvar Data = class Data {\n    constructor(packet, data) {\n        if(Array.isArray(data)) { data = packet.parse(data); }\n        if(!packet.validate(data)) { throw new Error(`Data is not valid : ${data}, ${packet.getName()}`); }\n        this._packet = packet;\n        this._data = data;\n        this._timestamp = Date.now();\n    }\n    getData() {\n        return this._data;\n    }\n    getPacket() {\n        return this._packet;\n    }\n    getTimestamp() {\n        return this._timestamp;\n    }\n    toString() {\n        return `${this.getData()} from packet #${this.getPacket().getId()} (${this.getPacket().getName()}) at time ${new Date(this.getTimestamp())} (${this.getTimestamp()})`;\n    }\n};\n\nexport default {Packet, Data};\n"],"sourceRoot":"/run/media/ferdinand/543D677F4B28C1CB/recherche/2017_roomba/irobot-create-open-interface/src"}