{"version":3,"sources":["Robot.js"],"names":["debug","Robot","constructor","device","_options","baudrate","_buffer","_serial","dataBits","stopBits","parity","rtscts","xon","xoff","xany","parser","_serialDataParser","bind","on","_init","error","message","buffer","Buffer","from","_processSensorData","checksum","passiveMode","safeMode","emit","_sendCommand","command","write","flush","serial","data","put","oldBufferSize","size","index","unparsableData","get","streamSize","remaining","sensorData","i","dataStream","streamCode","shift","streamDataSize","processed","packetId","sensorPackets","dataSize","getDataSize","splice","packet","Data","toJSON","toString","fullMode","sing","notes","song","push","length","note","drive","velocity","radius","direct","driveDirect","parseInt","left","right","stop","startDemo","number","demos","setLED","color","intensity","leds","setDigitalOutputPort","value","_digitalOutpoutPort","setDigitalOutputPin","pin","state","_digitalOutputPort","getDigitalOutputPort","getDigitalOutputState","setPWMLowSideDrivers","driver1","driver2","driver3","_setCommand","streamSensors","ids","streamAllSensors","Object","keys","pauseStreaming","resumeStreaming","wait","time","waitDistance","distance","waitAngle","angle","waitEvent","event","events","Packet"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAJA;AAMA,IAAIA,QAAQ,qBAAa,oCAAb,CAAZ;;AAEA,IAAIC,QAAQ,MAAMA,KAAN,0BAAiC;AACzC;;;AAGAC,gBAAYC,MAAZ,EAAoB;AAChB;AACA,aAAKC,QAAL,GAAgB;AACZC,sBAAU,KADE;AAEZF,oBAAQA;AAFI,SAAhB;AAIA,aAAKG,OAAL,GAAe,2BAAmB,IAAnB,CAAf;AACAN,cAAM,4BAAN,EAAoC,KAAKI,QAAL,CAAcD,MAAlD,EAA0D,KAAKC,QAAL,CAAcC,QAAxE;AACA,aAAKE,OAAL,GAAe,yBAAe,KAAKH,QAAL,CAAcD,MAA7B,EAAqC;AAChDE,sBAAU,KAAKD,QAAL,CAAcC,QADwB;AAEhDG,sBAAU,CAFsC;AAGhDC,sBAAU,CAHsC;AAIhDC,oBAAQ,MAJwC;AAKhDC,oBAAQ,KALwC;AAMhDC,iBAAK,KAN2C;AAOhDC,kBAAM,KAP0C;AAQhDC,kBAAM,KAR0C;AAShDC,oBAAQ,KAAKC,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CATwC,CASN;AATM,SAArC,EAWdC,EAXc,CAWX,MAXW,EAWH,KAAKC,KAAL,CAAWF,IAAX,CAAgB,IAAhB,CAXG,EAYdC,EAZc,CAYX,OAZW,EAYFE,SAASpB,MAAM,OAAN,EAAeoB,MAAMC,OAArB,CAZP,EAadH,EAbc,CAaX,MAbW,EAaHI,UAAUtB,MAAM,kBAAN,EAA0BuB,OAAOC,IAAP,CAAYF,MAAZ,CAA1B,CAbP,EAcdJ,EAdc,CAcX,YAdW,EAcG,KAAKO,kBAAL,CAAwBR,IAAxB,CAA6B,IAA7B,CAdH,EAedC,EAfc,CAeX,WAfW,EAeE,CAACI,MAAD,EAASI,QAAT,KAAsB1B,MAAM,wBAAN,EAAgC0B,QAAhC,EAA0C,GAA1C,EAA+CH,OAAOC,IAAP,CAAYF,MAAZ,CAA/C,CAfxB,CAAf;AAgBH;AACDH,YAAQ;AACJnB,cAAM,uCAAN;AACA,aAAK2B,WAAL;AACA,aAAKC,QAAL;AACA,aAAKC,IAAL,CAAU,WAAV;AACH;AACD;;;AAGAC,iBAAaC,OAAb,EAAsB;AAClB,YAAIT,SAASC,OAAOC,IAAP,CAAYO,OAAZ,CAAb;AACA/B,cAAM,eAAN,EAAuBsB,MAAvB;AACA,aAAKf,OAAL,CAAayB,KAAb,CAAmBV,MAAnB;AACA,aAAKf,OAAL,CAAa0B,KAAb;AACA,eAAO,IAAP;AACH;AACDjB,sBAAkBkB,MAAlB,EAA0BC,IAA1B,EAAgC;AAC5B,aAAK7B,OAAL,CAAa8B,GAAb,CAAiBD,IAAjB;AACA,YAAIE,gBAAgB,CAApB;AACA,eAAM,KAAK/B,OAAL,CAAagC,IAAb,KAAsB,CAAtB,IAA2BD,kBAAkB,KAAK/B,OAAL,CAAagC,IAAb,EAAnD,EAAwE;AACpED,4BAAgB,KAAK/B,OAAL,CAAagC,IAAb,EAAhB;AACA,gBAAIC,QAAQ,CAAZ;AACA,mBAAMA,QAAQ,KAAKjC,OAAL,CAAagC,IAAb,EAAR,IAA+B,OAAO,KAAKhC,OAAL,CAAaiC,KAAb,CAA5C,EAAiE;AAC7D,kBAAEA,KAAF;AACH;AACD,gBAAG,IAAIA,KAAP,EAAc;AACV,oBAAIC,iBAAiB,KAAKlC,OAAL,CAAamC,GAAb,CAAiBF,KAAjB,CAArB;AACAL,uBAAOL,IAAP,CAAY,MAAZ,EAAoBW,cAApB;AACH;;AAED,gBAAG,KAAKlC,OAAL,CAAagC,IAAb,KAAsB,CAAtB,IAA2B,KAAKhC,OAAL,CAAagC,IAAb,MAAuB,KAAKhC,OAAL,CAAa,CAAb,IAAkB,CAAvE,EAA0E;AACtE,oBAAIoC,aAAa,KAAKpC,OAAL,CAAa,CAAb,IAAkB,CAAnC;AACAN,sBAAM,aAAN,EAAqB,KAAKM,OAAL,CAAaqC,SAAb,EAArB,EAA+C,gBAA/C,EAAiED,UAAjE;AACA,oBAAIE,aAAa,KAAKtC,OAAL,CAAamC,GAAb,CAAiBC,UAAjB,CAAjB;AACA,oBAAIhB,WAAW,CAAf;AACA,qBAAI,IAAImB,IAAI,CAAZ,EAAeA,IAAID,WAAW,CAAX,IAAc,CAAjC,EAAoC,EAAEC,CAAtC,EAAyC;AACrCnB,gCAAYkB,WAAWC,CAAX,CAAZ;AACH;AACDnB,4BAAY,GAAZ;AACA,oBAAG,MAAMA,QAAT,EAAmB;AACfQ,2BAAOL,IAAP,CAAY,YAAZ,EAA0Be,UAA1B;AACH,iBAFD,MAEO;AACHV,2BAAOL,IAAP,CAAY,WAAZ,EAAyBe,UAAzB,EAAqClB,QAArC;AACH;AACJ,aAdD,MAcO;AACH;AACH;AACJ;AACJ;AACDD,uBAAmBqB,UAAnB,EAA+B;AAC3B9C,cAAM,cAAN,EAAsB8C,UAAtB;AACAA,qBAAa,CAAC,GAAGA,UAAJ,CAAb;AACA,YAAIC,aAAaD,WAAWE,KAAX,EAAjB,CAH2B,CAGU;AACrC,YAAIC,iBAAiBH,WAAWE,KAAX,EAArB;AACA,YAAIE,YAAY,CAAhB;AACA,eAAMA,YAAYD,cAAlB,EAAkC;AAC9B,gBAAIE,WAAWL,WAAWE,KAAX,EAAf;AACA,gBAAG/C,MAAMmD,aAAN,CAAoBD,QAApB,CAAH,EAAkC;AAC9B,oBAAIE,WAAWpD,MAAMmD,aAAN,CAAoBD,QAApB,EAA8BG,WAA9B,EAAf;AACA,oBAAInB,OAAOW,WAAWS,MAAX,CAAkB,CAAlB,EAAqBF,QAArB,CAAX;AACA,oBAAIG,SAAS,IAAI,kBAAQC,IAAZ,CAAiBxD,MAAMmD,aAAN,CAAoBD,QAApB,CAAjB,EAAgDhB,IAAhD,CAAb;AACA,qBAAKN,IAAL,CAAU,MAAV,EAAkB2B,OAAOE,MAAP,EAAlB;AACA1D,sBAAM,aAAN,EAAqBwD,OAAOG,QAAP,EAArB;AACAT,6BAAaG,WAAW,CAAxB;AACH,aAPD,MAOO;AACHrD,sBAAM,8BAAN,EAAsCmD,QAAtC,EAAgD,gBAAhD;AACA;AACH;AACJ;AACJ;AACD;;;AAGAxB,kBAAc;AACV,aAAKG,YAAL,CAAkB,CAAC,GAAD,CAAlB;AACH;AACD;;;AAGAF,eAAW;AACP,aAAKE,YAAL,CAAkB,CAAC,GAAD,CAAlB;AACH;AACD;;;AAGA8B,eAAW;AACP,aAAK9B,YAAL,CAAkB,CAAC,GAAD,CAAlB;AACH;AACD;;;AAGA+B,SAAKC,KAAL,EAAY;AACR,YAAIC,OAAO,EAAX,CADQ,CACM;AACdA,aAAKC,IAAL,CAAU,GAAV,EAAe,CAAf,EAAkBF,MAAMG,MAAxB;AACA,aAAI,IAAIC,IAAR,IAAgBJ,KAAhB,EAAuB;AACnBC,iBAAKC,IAAL,CAAUE,KAAK,CAAL,CAAV,EAAmBA,KAAK,CAAL,CAAnB;AACH;AACD,aAAKpC,YAAL,CAAkBiC,IAAlB;AACA,aAAKjC,YAAL,CAAkB,CAAC,GAAD,EAAK,CAAL,CAAlB;AACH;AACD;;;AAGAqC,UAAMC,QAAN,EAAgBC,MAAhB,EAAwBC,SAAS,KAAjC,EAAwC;AACpC,YAAGA,MAAH,EAAW;AAAE,iBAAKC,WAAL,CAAiBH,QAAjB,EAA2BC,MAA3B;AAAqC;AAClDD,mBAAWI,SAASJ,QAAT,CAAX;AACAC,iBAASG,SAASH,MAAT,CAAT;AACA,aAAKvC,YAAL,CAAkB,CAAC,GAAD,EAAOsC,YAAY,CAAb,GAAkB,GAAxB,EAA6BA,WAAW,GAAxC,EAA8CC,UAAU,CAAX,GAAgB,GAA7D,EAAkEA,SAAS,GAA3E,CAAlB;AACH;AACD;;;AAGAE,gBAAYE,IAAZ,EAAkBC,KAAlB,EAAyB;AACrBD,eAAOD,SAASC,IAAT,CAAP;AACAC,gBAAQF,SAASE,KAAT,CAAR;AACA,aAAK5C,YAAL,CAAkB,CAAC,GAAD,EAAO2C,QAAQ,CAAT,GAAc,GAApB,EAAyBA,OAAO,GAAhC,EAAsCC,SAAS,CAAV,GAAe,GAApD,EAAyDA,QAAQ,GAAjE,CAAlB;AACH;AACD;;;AAGAC,WAAO;AACH,aAAKJ,WAAL,CAAiB,CAAjB,EAAmB,CAAnB;AACA,aAAKK,SAAL,CAAe,OAAf;AACH;AACD;;;AAGAA,cAAUC,MAAV,EAAkB;AACd,YAAG,aAAa,OAAOA,MAAvB,EAA+B;AAAEA,qBAAS5E,MAAM6E,KAAN,CAAYD,MAAZ,KAAuB5E,MAAM6E,KAAN,CAAY,OAAZ,CAAhC;AAAuD;AACxF,aAAKhD,YAAL,CAAkB,CAAC,GAAD,EAAM+C,MAAN,CAAlB;AACH;AACDE,WAAOF,MAAP,EAAeG,KAAf,EAAsBC,SAAtB,EAAiC;AAC7B,YAAG,aAAa,OAAOJ,MAAvB,EAA+B;AAAEA,qBAAS5E,MAAMiF,IAAN,CAAWL,MAAX,CAAT;AAA8B;AAC/D,aAAK/C,YAAL,CAAkB,CAAC,GAAD,EAAM+C,MAAN,EAAcG,KAAd,EAAqBC,SAArB,CAAlB;AACH;AACDE,yBAAqBC,KAArB,EAA4B;AACxB,aAAKC,mBAAL,GAA2BD,KAA3B;AACA,aAAKtD,YAAL,CAAkB,CAAC,GAAD,EAAMsD,KAAN,CAAlB;AACH;AACDE,wBAAoBC,GAApB,EAAyBC,KAAzB,EAAgC;AAC5B,aAAKL,oBAAL,CAA0B,KAAKM,kBAAL,GAA2B,CAACD,QAAQ,CAAR,GAAY,CAAb,KAAmBD,GAAxE;AACH;AACDG,2BAAuB;AACnB,eAAO,KAAKD,kBAAZ;AACH;AACDE,0BAAsBJ,GAAtB,EAA2B;AACvB,eAAO,KAAKE,kBAAL,GAA2B,KAAKF,GAAhC,GAAuC,IAAvC,GAA8C,KAArD;AACH;AACDK,yBAAqBC,OAArB,EAA8BC,OAA9B,EAAuCC,OAAvC,EAAgD;AAC5C,aAAKC,WAAL,CAAiB,CAAC,GAAD,EAAMH,OAAN,EAAeC,OAAf,EAAwBC,OAAxB,CAAjB;AACH;AACD;;;;;;;;;;AAUAE,kBAAcC,GAAd,EAAmB;AACf,aAAKpE,YAAL,CAAkB,CAAC,GAAD,EAAMoE,IAAIjC,MAAV,EAAkB,GAAGiC,GAArB,CAAlB;AACH;AACDC,uBAAmB;AACf,YAAID,MAAME,OAAOC,IAAP,CAAYpG,MAAMmD,aAAlB,CAAV;AACA,aAAK6C,aAAL,CAAmBC,GAAnB;AACH;AACDI,qBAAiB;AACb,aAAKxE,YAAL,CAAkB,CAAC,GAAD,EAAM,CAAN,CAAlB;AACH;AACDyE,sBAAkB;AACd,aAAKzE,YAAL,CAAkB,CAAC,GAAD,EAAM,CAAN,CAAlB;AACH;AACD0E,SAAKC,IAAL,EAAW;AACP,aAAK3E,YAAL,CAAkB,CAAC,GAAD,EAAM2E,IAAN,CAAlB;AACH;AACDC,iBAAaC,QAAb,EAAuB;AACnB,aAAK7E,YAAL,CAAkB,CAAC,GAAD,EAAO6E,YAAY,CAAb,GAAkB,GAAxB,EAA6BA,WAAW,GAAxC,CAAlB;AACH;AACDC,cAAUC,KAAV,EAAiB;AACb,aAAK/E,YAAL,CAAkB,CAAC,GAAD,EAAO+E,SAAS,CAAV,GAAe,GAArB,EAA0BA,QAAQ,GAAlC,CAAlB;AACH;AACDC,cAAUC,KAAV,EAAiB;AACb,YAAG,aAAa,OAAOA,KAAvB,EAA8B;AAAEA,oBAAQ9G,MAAM+G,MAAN,CAAaD,KAAb,CAAR;AAA8B;AAC9D,aAAKjF,YAAL,CAAkB,CAAC,GAAD,EAAMiF,KAAN,CAAlB;AACH;AAvNwC,CAA7C;;AA0NA9G,MAAM6E,KAAN,GAAc;AACV,aAAS,GADC;AAEV,aAAS,CAFC;AAGV,sBAAkB,CAHR;AAIV,kBAAc,CAJJ;AAKV,aAAS,CALC;AAMV,0BAAsB,CANZ;AAOV,YAAQ,CAPE;AAQV,YAAQ,CARE;AASV,WAAO,CATG;AAUV,iBAAa,CAVH;AAWV,aAAS;AAXC,CAAd;;AAcA7E,MAAMiF,IAAN,GAAa;AACT,eAAW,CADF;AAET,YAAQ;AAFC,CAAb;;AAKAjF,MAAM+G,MAAN,GAAe;AACX,kBAAc,CADH;AAEX,wBAAoB,CAFT;AAGX,uBAAmB,CAHR;AAIX,wBAAoB,CAJT;AAKX,YAAQ,CALG;AAMX,iBAAa,CANF;AAOX,kBAAc,CAPH;AAQX,oBAAgB,CARL;AASX,YAAQ,CATG;AAUX,aAAS,EAVE;AAWX,kBAAc,EAXH;AAYX,wBAAoB,EAZT;AAaX,yBAAqB,EAbV;AAcX,mBAAe,EAdJ;AAeX,iBAAa,EAfF;AAgBX,sBAAkB,EAhBP;AAiBX,mBAAe,EAjBJ;AAkBX,wBAAoB,EAlBT;AAmBX,wBAAoB,EAnBT;AAoBX,wBAAoB,EApBT;AAqBX,wBAAoB,EArBT;AAsBX,eAAW;AAtBA,CAAf;;AAyBA/G,MAAMmD,aAAN,GAAsB;AAClB,OAAG,IAAI,kBAAQ6D,MAAZ,CAAmB,CAAnB,EAAsB,oBAAtB,EAA4C,CAA5C,EAA+C,CAAC,CAAD,EAAI,EAAJ,CAA/C,CADe;AAElB,OAAG,IAAI,kBAAQA,MAAZ,CAAmB,CAAnB,EAAsB,MAAtB,EAA8B,CAA9B,EAAiC,CAAC,CAAD,EAAI,CAAJ,CAAjC,CAFe;AAGlB,OAAG,IAAI,kBAAQA,MAAZ,CAAmB,CAAnB,EAAsB,WAAtB,EAAmC,CAAnC,EAAsC,CAAC,CAAD,EAAI,CAAJ,CAAtC,CAHe;AAIlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,gBAAvB,EAAyC,CAAzC,EAA4C,CAAC,CAAD,EAAI,CAAJ,CAA5C,CAJc;AAKlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,iBAAvB,EAA0C,CAA1C,EAA6C,CAAC,CAAD,EAAI,CAAJ,CAA7C,CALc;AAMlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,YAAvB,EAAqC,CAArC,EAAwC,CAAC,CAAD,EAAI,CAAJ,CAAxC,CANc;AAOlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,aAAvB,EAAsC,CAAtC,EAAyC,CAAC,CAAD,EAAI,CAAJ,CAAzC,CAPc;AAQlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,cAAvB,EAAuC,CAAvC,EAA0C,CAAC,CAAD,EAAI,EAAJ,CAA1C,CARc;AASlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,QAAvB,EAAiC,CAAjC,EAAoC,CAAC,CAAD,EAAI,GAAJ,CAApC,CATc;AAUlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,SAAvB,EAAkC,CAAlC,EAAqC,CAAC,CAAD,EAAI,EAAJ,CAArC,CAVc;AAWlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,UAAvB,EAAmC,CAAnC,EAAsC,CAAC,CAAC,KAAF,EAAS,KAAT,CAAtC,EAAuD,IAAvD,CAXc;AAYlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,OAAvB,EAAgC,CAAhC,EAAmC,CAAC,CAAC,KAAF,EAAS,KAAT,CAAnC,EAAoD,IAApD,CAZc;AAalB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,eAAvB,EAAwC,CAAxC,EAA2C,CAAC,CAAD,EAAI,CAAJ,CAA3C,CAbc;AAclB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,SAAvB,EAAkC,CAAlC,EAAqC,CAAC,CAAD,EAAI,KAAJ,CAArC,EAAiD,IAAjD,CAdc;AAelB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,SAAvB,EAAkC,CAAlC,EAAqC,CAAC,CAAC,KAAF,EAAS,KAAT,CAArC,EAAsD,IAAtD,CAfc;AAgBlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,oBAAvB,EAA6C,CAA7C,EAAgD,CAAC,CAAC,GAAF,EAAO,GAAP,CAAhD,EAA6D,IAA7D,CAhBc;AAiBlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,eAAvB,EAAwC,CAAxC,EAA2C,CAAC,CAAD,EAAI,KAAJ,CAA3C,EAAuD,KAAvD,CAjBc;AAkBlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,iBAAvB,EAA0C,CAA1C,EAA6C,CAAC,CAAD,EAAI,KAAJ,CAA7C,EAAyD,KAAzD,CAlBc;AAmBlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,YAAvB,EAAqC,CAArC,EAAwC,CAAC,CAAD,EAAI,IAAJ,CAAxC,CAnBc;AAoBlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,iBAAvB,EAA0C,CAA1C,EAA6C,CAAC,CAAD,EAAI,IAAJ,CAA7C,CApBc;AAqBlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,sBAAvB,EAA+C,CAA/C,EAAkD,CAAC,CAAD,EAAI,IAAJ,CAAlD,CArBc;AAsBlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,uBAAvB,EAAgD,CAAhD,EAAmD,CAAC,CAAD,EAAI,IAAJ,CAAnD,CAtBc;AAuBlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,kBAAvB,EAA2C,CAA3C,EAA8C,CAAC,CAAD,EAAI,IAAJ,CAA9C,CAvBc;AAwBlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,mBAAvB,EAA4C,CAA5C,EAA+C,CAAC,CAAD,EAAI,EAAJ,CAA/C,CAxBc;AAyBlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,kBAAvB,EAA2C,CAA3C,EAA8C,CAAC,CAAD,EAAI,IAAJ,CAA9C,CAzBc;AA0BlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,0BAAvB,EAAmD,CAAnD,EAAsD,CAAC,CAAD,EAAI,CAAJ,CAAtD,CA1Bc;AA2BlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,QAAvB,EAAiC,CAAjC,EAAoC,CAAC,CAAD,EAAI,CAAJ,CAApC,CA3Bc;AA4BlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,YAAvB,EAAqC,CAArC,EAAwC,CAAC,CAAD,EAAI,EAAJ,CAAxC,CA5Bc;AA6BlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,aAAvB,EAAsC,CAAtC,EAAyC,CAAC,CAAD,EAAI,CAAJ,CAAzC,CA7Bc;AA8BlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,uBAAvB,EAAgD,CAAhD,EAAmD,CAAC,CAAD,EAAI,EAAJ,CAAnD,CA9Bc;AA+BlB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,UAAvB,EAAmC,CAAnC,EAAsC,CAAC,CAAC,GAAF,EAAO,GAAP,CAAtC,EAAmD,MAAnD,CA/Bc;AAgClB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,QAAvB,EAAiC,CAAjC,EAAoC,CAAC,CAAC,KAAF,EAAS,KAAT,CAApC,EAAqD,IAArD,CAhCc;AAiClB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,eAAvB,EAAwC,CAAxC,EAA2C,CAAC,CAAC,GAAF,EAAO,GAAP,CAA3C,EAAwD,MAAxD,CAjCc;AAkClB,QAAI,IAAI,kBAAQA,MAAZ,CAAmB,EAAnB,EAAuB,cAAvB,EAAuC,CAAvC,EAA0C,CAAC,CAAC,GAAF,EAAO,GAAP,CAA1C,EAAuD,MAAvD;AAlCc,CAAtB;;kBAqCehH,K","file":"Robot.js","sourcesContent":["import SerialPort from 'serialport';\n//import readline from 'readline';\nimport EventEmitter from 'events';\nimport sensors from './sensors'\nimport debugFactory from 'debug';\nimport CircularBuffer from 'cyclic-buffer';\n\nvar debug = debugFactory('irobot-create-open-interface:robot');\n\nvar Robot = class Robot extends EventEmitter {\n    /**\n     * \n     */\n    constructor(device) {\n        super();\n        this._options = {\n            baudrate: 57600,\n            device: device\n        };\n        this._buffer = new CircularBuffer(1024);\n        debug('New robot, starting serial', this._options.device, this._options.baudrate);\n        this._serial = new SerialPort(this._options.device, {\n            baudrate: this._options.baudrate,\n            dataBits: 8,\n            stopBits: 1,\n            parity: 'none',\n            rtscts: false,\n            xon: false,\n            xoff: false,\n            xany: false,\n            parser: this._serialDataParser.bind(this) //SerialPort.parsers.readline('\\n')\n        })\n        .on('open', this._init.bind(this))\n        .on('error', error => debug('Error', error.message) )\n        .on('data', buffer => debug('Unparsable data:', Buffer.from(buffer)) )\n        .on('sensordata', this._processSensorData.bind(this))\n        .on('errordata', (buffer, checksum) => debug('Packet error checksum:', checksum, ';', Buffer.from(buffer)));\n    }\n    _init() {\n        debug('Serial connection: ok ; set safe mode');\n        this.passiveMode();\n        this.safeMode();\n        this.emit('connected');\n    }\n    /**\n     * \n     */\n    _sendCommand(command) {\n        var buffer = Buffer.from(command);\n        debug('Send command:', buffer);\n        this._serial.write(buffer);\n        this._serial.flush();\n        return this;\n    }\n    _serialDataParser(serial, data) {\n        this._buffer.put(data);\n        var oldBufferSize = 0;\n        while(this._buffer.size() > 0 && oldBufferSize !== this._buffer.size()) {\n            oldBufferSize = this._buffer.size();\n            let index = 0;\n            while(index < this._buffer.size() && 19 !== this._buffer[index]) {\n                ++index;\n            }\n            if(0 < index) { \n                let unparsableData = this._buffer.get(index);\n                serial.emit('data', unparsableData); \n            }\n            \n            if(this._buffer.size() > 2 && this._buffer.size() >= this._buffer[1] + 3) {\n                let streamSize = this._buffer[1] + 3;\n                debug('buffer size', this._buffer.remaining(), '; splice size:', streamSize);\n                let sensorData = this._buffer.get(streamSize);\n                let checksum = 0;\n                for(let i = 0; i < sensorData[1]+3; ++i) {\n                    checksum += sensorData[i];\n                }\n                checksum %= 256;\n                if(0 === checksum) {\n                    serial.emit('sensordata', sensorData);\n                } else {\n                    serial.emit('errordata', sensorData, checksum);\n                }\n            } else {\n                break;\n            }\n        }\n    }\n    _processSensorData(dataStream) {\n        debug('Data Stream:', dataStream);\n        dataStream = [...dataStream];\n        var streamCode = dataStream.shift(); // 19\n        var streamDataSize = dataStream.shift();\n        var processed = 0;\n        while(processed < streamDataSize) {\n            let packetId = dataStream.shift();\n            if(Robot.sensorPackets[packetId]) {\n                let dataSize = Robot.sensorPackets[packetId].getDataSize();\n                let data = dataStream.splice(0, dataSize);\n                let packet = new sensors.Data(Robot.sensorPackets[packetId], data);\n                this.emit('data', packet.toJSON());\n                debug('New packet:', packet.toString());\n                processed += dataSize + 1;\n            } else {\n                debug('Data Stream Error: packet id', packetId, 'does not exist');\n                break;\n            }\n        }\n    }\n    /**\n     * \n     */\n    passiveMode() {\n        this._sendCommand([128]);\n    }\n    /**\n     * \n     */\n    safeMode() {\n        this._sendCommand([131]);        \n    }\n    /**\n     * \n     */\n    fullMode() {\n        this._sendCommand([132]);\n    }\n    /**\n     * \n     */\n    sing(notes) {\n        var song = [];//new Array(notes.length * 2 + 3);\n        song.push(140, 0, notes.length);\n        for(let note of notes) {\n            song.push(note[0], note[1]);\n        }\n        this._sendCommand(song);\n        this._sendCommand([141,0]);\n    }\n    /**\n     * \n     */\n    drive(velocity, radius, direct = false) {\n        if(direct) { this.driveDirect(velocity, radius); }\n        velocity = parseInt(velocity);\n        radius = parseInt(radius);\n        this._sendCommand([137, (velocity >> 8) & 255, velocity & 255, (radius >> 8) & 255, radius & 255]);\n    }\n    /**\n     * \n     */\n    driveDirect(left, right) {\n        left = parseInt(left);\n        right = parseInt(right);\n        this._sendCommand([145, (left >> 8) & 255, left & 255, (right >> 8) & 255, right & 255]);\n    }\n    /**\n     * \n     */\n    stop() {\n        this.driveDirect(0,0);\n        this.startDemo('abort');\n    }\n    /**\n     * \n     */\n    startDemo(number) {\n        if('string' === typeof number) { number = Robot.demos[number] || Robot.demos['abort']; }\n        this._sendCommand([136, number]);\n    }\n    setLED(number, color, intensity) {\n        if('string' === typeof number) { number = Robot.leds[number]; }\n        this._sendCommand([139, number, color, intensity]);\n    }\n    setDigitalOutputPort(value) {\n        this._digitalOutpoutPort = value;\n        this._sendCommand([147, value]);\n    }\n    setDigitalOutputPin(pin, state) {\n        this.setDigitalOutputPort(this._digitalOutputPort | ((state ? 1 : 0) << pin));\n    }\n    getDigitalOutputPort() {\n        return this._digitalOutputPort;\n    }\n    getDigitalOutputState(pin) {\n        return this._digitalOutputPort & (1 << pin) ? true : false;\n    }\n    setPWMLowSideDrivers(driver1, driver2, driver3) {\n        this._setCommand([144, driver1, driver2, driver3]);\n    }\n    /*requestSensor(id) {\n        this._sendCommand([142, id]);\n    }\n    requestSensors(ids) {\n        this._sendCommand([149, ids.length, ...ids]);\n    }\n    requestAllSensors() {\n        var ids = [7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42];\n        this.requestSensors(ids);\n    }*/\n    streamSensors(ids) {\n        this._sendCommand([148, ids.length, ...ids]);\n    }\n    streamAllSensors() {\n        var ids = Object.keys(Robot.sensorPackets);\n        this.streamSensors(ids);\n    }\n    pauseStreaming() {\n        this._sendCommand([150, 0]);\n    }\n    resumeStreaming() {\n        this._sendCommand([150, 1]);\n    }\n    wait(time) {\n        this._sendCommand([155, time]);\n    }\n    waitDistance(distance) {\n        this._sendCommand([156, (distance << 8) & 255, distance & 255]);\n    }\n    waitAngle(angle) {\n        this._sendCommand([157, (angle << 8) & 255, angle & 255]);\n    }\n    waitEvent(event) {\n        if('string' === typeof event) { event = Robot.events[event]; }\n        this._sendCommand([158, event]);\n    }\n};\n\nRobot.demos = {\n    'abort': 255,\n    'cover': 0,\n    'cover-and-dock': 1,\n    'spot-cover': 2,\n    'mouse': 3,\n    'drive-figure-eight': 4,\n    'wimp': 5,\n    'home': 6,\n    'tag': 7,\n    'pachelbel': 8,\n    'banjo': 9\n};\n\nRobot.leds = {\n    'advance': 8,\n    'play': 2\n};\n\nRobot.events = {\n    'wheel-drop': 1,\n    'front-wheel-drop': 2,\n    'left-wheel-drop': 3,\n    'right-wheel-drop': 4,\n    'bump': 5,\n    'left-bump': 6,\n    'right-bump': 7,\n    'virtual-wall': 8,\n    'wall': 9,\n    'cliff': 10,\n    'left-cliff': 11,\n    'front-left-cliff': 12,\n    'front-right-cliff': 13,\n    'right-cliff': 14,\n    'home-base': 15,\n    'advance-button': 16,\n    'play-button': 17,\n    'digital-output-0': 18,\n    'digital-output-1': 19,\n    'digital-output-2': 20,\n    'digital-output-3': 21,\n    'passive': 22,\n};\n\nRobot.sensorPackets = {\n    7: new sensors.Packet(7, 'BumpsAndWheelDrops', 1, [0, 31]), \n    8: new sensors.Packet(8, 'Wall', 1, [0, 1]), \n    9: new sensors.Packet(9, 'CliffLeft', 1, [0, 1]), \n    10: new sensors.Packet(10, 'CliffFrontLeft', 1, [0, 1]), \n    11: new sensors.Packet(11, 'CliffFrontRight', 1, [0, 1]), \n    12: new sensors.Packet(12, 'CliffRight', 1, [0, 1]), \n    13: new sensors.Packet(13, 'VirtualWall', 1, [0, 1]), \n    14: new sensors.Packet(14, 'Overcurrents', 1, [0, 31]), \n    17: new sensors.Packet(17, 'IRByte', 1, [0, 255]), \n    18: new sensors.Packet(18, 'Buttons', 1, [0, 15]),\n    19: new sensors.Packet(19, 'Distance', 2, [-32768, 32767], 'mm'), \n    20: new sensors.Packet(20, 'Angle', 2, [-32768, 32767], 'mm'), \n    21: new sensors.Packet(21, 'ChargingState', 1, [0, 5]),\n    22: new sensors.Packet(22, 'Voltage', 2, [0, 65535], 'mV'),\n    23: new sensors.Packet(23, 'Current', 2, [-32768, 32767], 'mA'), \n    24: new sensors.Packet(24, 'BatteryTemperature', 1, [-128, 127], '°C'),\n    25: new sensors.Packet(25, 'BatteryCharge', 2, [0, 65535], 'mAh'),\n    26: new sensors.Packet(26, 'BatteryCapacity', 2, [0, 65535], 'mAh'), \n    27: new sensors.Packet(27, 'WallSignal', 2, [0, 4095]), \n    28: new sensors.Packet(28, 'CliffLeftSignal', 2, [0, 4095]), \n    29: new sensors.Packet(29, 'CliffFrontLeftSignal', 2, [0, 4095]), \n    30: new sensors.Packet(30, 'CliffFrontRightSignal', 2, [0, 4095]), \n    31: new sensors.Packet(31, 'CliffRightSignal', 2, [0, 4095]),\n    32: new sensors.Packet(32, 'UserDigitalInputs', 1, [0, 31]),\n    33: new sensors.Packet(33, 'UserAnalogInputs', 2, [0, 1023]),\n    34: new sensors.Packet(34, 'ChargingSourcesAvailable', 1, [0, 3]),\n    35: new sensors.Packet(35, 'OIMode', 1, [0, 3]),\n    36: new sensors.Packet(36, 'SongNumber', 1, [0, 15]),\n    37: new sensors.Packet(37, 'SongPlaying', 1, [0, 1]),\n    38: new sensors.Packet(38, 'NumberOfStreamPackets', 1, [0, 42]),\n    39: new sensors.Packet(39, 'Velocity', 2, [-500, 500], 'mm/s'),\n    40: new sensors.Packet(40, 'Radius', 2, [-32768, 32767], 'mm'),\n    41: new sensors.Packet(41, 'RightVelocity', 2, [-500, 500], 'mm/s'), \n    42: new sensors.Packet(42, 'LeftVelocity', 2, [-500, 500], 'mm/s')\n};\n\nexport default Robot;\n"],"sourceRoot":"/run/media/ferdinand/543D677F4B28C1CB/recherche/2017_roomba/irobot-create-open-interface/src"}